enum ModEventName{
	ModEvent_EMPTY = 0,				// Признак отсутствия события ---> отсутствия расчёта параметров	 
	ModEvent_INIT = 1,				// Инициализация МД
	ModEvent_STEP = 2,				// Выполнен один шаг интегрирования	 
	ModEvent_BKSTEP = 3,			// Отшагивание в пределах витка для уточнения чего либо

	ModEvent_DUON = 4,				// 	 
	ModEvent_DUSTEPON = 5,			// 	 
	ModEvent_DUOFF = 6,				// 	 

	ModEvent_VITVU = 7,				// Восходящий узел витка	 
	ModEvent_VITNU = 8,				// Нисходящий узел витка
	ModEvent_HMIN = 9,				// Минимальная высота
	ModEvent_HMAX = 10,				// Максимальная высота
	ModEvent_RMIN = 11,				// Минимальный радиус
	ModEvent_RMAX = 12,				// Максимальный радиус
	ModEvent_SHADOWBEG = 13,		// Начало тени
	ModEvent_SHADOWEND = 14,		// Конец тени

	ModEvent_ONBREAKTIME = 15,		// Достигнут предельный момент времени заданный параметром notFurtherTime в функции GoStepA
	ModEvent_ONTIME = 16,			// Выполнено прогнозирование до витка
	ModEvent_ONVIT = 17,			// Выполнено прогнозирование до заданного момента времени
	ModEvent_ONARG = 18,			// Выполнено прогнозирование до заданного аргумента широты

	ModEvent_ZRVBEG = 100,			// Начало ЗРВ
	ModEvent_ZRVEND = 101,			// Конец ЗРВ
	ModEvent_ZRVPARAM = 102			// Момент прохождения параметра ЗРВ
};

//-------------------------------------------------------------------------------
// Характеристики события 
typedef struct ZMOD_EVENT {
ModEventName	ID ;		// Имя события
double			ta ;		// Время события, атомное в ссс   
double			Value ;		// Числовые характеристики события, для большинства 
double			Value2 ;	// событий не имеют смысла ==> имеют нулевые значения
double			Value3 ;	//
double			Value4 ;	//
long			Value5 ;	//
} _ZMOD_EVENT ;				//

struct DATE
{
	int  d ;        // Число (1 - 31)
	int  m ;        // Месяц (1 - 12)
	int  g ;        // Год   (1900 - 9999)
};

struct FLYTIME_API TIME {
	short  h;       // Часы         (0 - 23)
	short  m;       // Минуты       (0 - 59)
	short  s;       // Секунды      (0 - 59)
	double d;       // Доли секунды (  < 1 )
};

typedef struct ZSC_SI {
	ZMOD_EVENT E ;				// Событие для которого расчитан данный массив параметров движения
								// Например начало витка, очередной шаг, отшагивание назад, минимальная высота и т.д....
	long Vit75 ;				// Витки для АСК 1975, 2000 годов, 
	long Vit00 ;				// текущей и текущей средней эпохи
	long VitTE ;
	long VitTES ;

	// Параметры движени в км, км/сек, рад
	double GSK[6] ;		// Координаты и скорости в ГСК
	double ASKTES[6] ;	// Координаты и скорости в АСК текущей эпохи средней
	double ASKTE[6] ;	// Координаты и скорости в АСК текущей истинной
	double ASK1975[6] ;	// Координаты и скорости в АСК эпихи 1975 года
	double ASK2000[6] ;	// Координаты и скорости в АСК эпохи 2000 года
	double OSK1975[6] ;	// Оскулирующие элементы орбиты относительно экватора эпохи 1975 г.
	double OSKTE[6] ;	// Оскулирующие элементы орбиты относительно экватора текущей истинной эпохи
	double OSKTES[6] ;	// Оскулирующие элементы орбиты относительно экватора текущей средней эпохи
	double OSK2000[6] ;	// Оскулирующие элементы орбиты относительно экватора эпохи 2000 г.
	double THBLFR[9] ;	// 0 - период оск. в секундах, 1 - высота в км, 2 - B, 3 - L, 
						// 4 - fi в градусах, 5 - R в км,
						// 6 - производная от высоты км/сек, 7 - производная от радиуса км/сек.
						// 8 - координата характеризующая смену витка

	bool   isOSK1975bpl ;	// Признаки расчета оскулирующих элементов для альтернативной
	bool   isOSK2000bpl ;	// базовой плоскости и экватора в различных эпохах
	bool   isOSKTEbpl ;
	bool   isOSKTESbpl ;

	double OSK1975bpl[6] ;	// Оскулирующие элементы орбиты для альтернативной 
	double OSKTEbpl[6] ;	// базовой плоскости и экватора в различных эпохах
	double OSKTESbpl[6] ;
	double OSK2000bpl[6] ;

	// Интегрируемые параметры внещних дифференциальных уравнений
	double ExternalEq[EXTEQ_MAXCOUNT] ; // Значения внешних переменных
	int    ExternalEqCount ;// Колличество внешних уравнений
	bool   ExternalEqOn ;	// Признак активности внешних уравнений ("уравнения включены")

	double SA[25] ;			// Характеристики освещённости ("углы Солнцы"). Все углы в радианах

	double   m ;			// Текущая масса КА, кг
	double   tmss ;			// Местное среднее солнечное время, ссс
	double   ta ;			// Время атомное, то самое на которое расчитан данный массив информации
	DATE     Data;			// Дата структурированая (день месяц и год)
	TIME     Time ;			// Время в часах минутах и секундах (московское дикретное)
	//TheTimes T ;			// Всё что можно о времени ;
} _ZSC_SI ;
 